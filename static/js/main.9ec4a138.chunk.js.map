{"version":3,"sources":["components/Navbar.js","Previewer.js","images/notebook.jpg","About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","to","Component","Previewer","state","body","handleChange","bind","handleSubmit","event","this","setState","target","value","rawText","document","getElementById","innerHTML","parseMarkdown","markdown","marked","replace","DomPurify","sanitize","console","log","preventDefault","id","href","className","onChange","About","src","notebook","alt","height","width","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yWAIMA,E,4JAGJ,WACE,OACE,iCACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,yBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,2BAQX,K,GApBkBC,aAwBNF,IC2DAG,E,kDAhFb,aAAe,IAAD,8BAEZ,gBAEKC,MAAQ,CAEXC,KAAM,kXAMR,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAEpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAdR,CAeb,C,gDAID,SAAaE,GAEXC,KAAKC,SAAS,CAAEN,KAAMI,EAAMG,OAAOC,QACnC,IAAIC,EAAUL,EAAMG,OAAOC,MAC3BE,SAASC,eAAe,WAAWC,UAAYP,KAAKQ,cAAcJ,EACnE,G,2BAED,SAAcA,GACZ,IAAIK,EAAWC,iBAAON,GAASO,QAAQ,OAAQ,SAC/C,OAAOC,IAAUC,SAASJ,EAC3B,G,0BAED,SAAaV,GAEXe,QAAQC,IAAIf,KAAKN,OAEjBK,EAAMiB,gBACP,G,+BAED,WACEX,SAASC,eAAe,WAAWC,UAAYP,KAAKQ,cAAcR,KAAKN,MAAMC,KAC9E,G,oBAED,WAEE,OACE,sBAAKsB,GAAG,OAAR,UACE,cAAC,EAAD,IACA,oDACA,6EACA,2DAA6B,mBAAGC,KAAK,oCAAR,sBAC7B,uBACA,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,+CACA,uBAGA,0BAAUA,UAAU,cAAcF,GAAG,SAGnCd,MAAOH,KAAKN,MAAMC,KAElByB,SAAUpB,KAAKJ,kBAGnB,sBAAKuB,UAAU,SAAf,UACE,8CACA,mBAAGF,GAAG,kBAKV,yBAIL,K,GA9EqBzB,aCLT,G,MAAA,IAA0B,sCCInC6B,E,4JAEJ,WAEE,OAEE,sBAAKJ,GAAG,OAAR,UACE,cAAC,EAAD,IACA,oDACA,6EACA,2DAA6B,mBAAGC,KAAK,oCAAR,sBAC7B,qBAAKI,IAAKC,EAAUC,IAAI,WAAWC,OAAO,MAAMC,MAAM,UAG3D,K,GAdiBlC,aAkBL6B,IChBTM,E,4JACJ,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,QAGlC,K,GARerC,aAYHmC,ICNAG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,ECHDQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJpC,SAASC,eAAe,SAQ1BwB,G","file":"static/js/main.9ec4a138.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.css\";\n\nclass Navbar extends Component {\n\n\n  render() {\n    return (\n      <header>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Main page</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n\n          </ul>\n\n        </nav>\n      </header>\n    );\n  }\n\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport DomPurify from 'dompurify';\nimport { marked } from 'marked';\nimport './Previewer.css';\nimport Navbar from './components/Navbar';\nclass Previewer extends Component {\n\n  constructor() {\n\n    super();\n\n    this.state = {\n\n      body: '# h1 \\n ## h2 \\n[a](https://commonmark.org/help/tutorial/07-links.html)\\n\\n `Code`  <pre>```html: console.log(\"My actual code\"); ```</pre> \\n  \\n - bananas \\n - apples \\n - muffins \\n > Please do not quote me on that \\n\\n![Markdown symbol](https://commonmark.org/help/images/favicon.png) \\n **Extra bold text** ```boolean != true``` \\n <pre>```codeblock```</pre> \\n '\n\n    };\n\n\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n\n  handleChange(event) {\n\n    this.setState({ body: event.target.value });\n    var rawText = event.target.value;\n    document.getElementById(\"preview\").innerHTML = this.parseMarkdown(rawText);\n  }\n\n  parseMarkdown(rawText) {\n    var markdown = marked(rawText).replace(/  +/g, \"<br/>\");\n    return DomPurify.sanitize(markdown);\n  }\n\n  handleSubmit(event) {\n\n    console.log(this.state);\n\n    event.preventDefault();\n  }\n\n  componentDidMount() {\n    document.getElementById(\"preview\").innerHTML = this.parseMarkdown(this.state.body);\n  }\n\n  render() {\n\n    return (\n      <div id=\"body\">\n        <Navbar></Navbar>\n        <h1>Markdown previewer</h1>\n        <p>This app lets you render markdown into html.</p>\n        <p>Learn more about markdown <a href=\"https://www.markdowntutorial.com/\">here.</a></p>\n        <br />\n        <div className=\"row\">\n          <div className=\"column\">\n            <strong>Markdown:</strong>\n            <br />\n\n\n            <textarea className=\"fullContent\" id=\"editor\"\n\n\n              value={this.state.body}\n\n              onChange={this.handleChange} />\n\n          </div>\n          <div className=\"column\">\n            <strong>Preview:</strong>\n            <p id=\"preview\" >\n            </p>\n          </div>\n        </div>\n\n        <br></br>\n\n      </div>\n    );\n  }\n}\n\n\nexport default Previewer;\n","export default __webpack_public_path__ + \"static/media/notebook.7849355c.jpg\";","import React, { Component } from 'react';\nimport './About.css';\nimport notebook from './images/notebook.jpg';\nimport Navbar from \"./components/Navbar\";\nclass About extends Component {\n\n  render() {\n\n    return (\n\n      <div id=\"body\">\n        <Navbar></Navbar>\n        <h1>Markdown previewer</h1>\n        <p>This app lets you render markdown into html.</p>\n        <p>Learn more about markdown <a href=\"https://www.markdowntutorial.com/\">here.</a></p>\n        <img src={notebook} alt=\"notebook\" height=\"15%\" width=\"15%\" />\n      </div>\n    );\n  }\n}\n\n\nexport default About;\n","import React, { Component } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Previewer from \"./Previewer\";\nimport About from \"./About\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Routes>\n        <Route path=\"/\" element={<Previewer />} />\n        <Route path=\"about\" element={<About />} />\n      </Routes>\n    );\n  }\n\n}\n\nexport default App; \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\"\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}